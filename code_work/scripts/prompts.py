# prompts.py

# 1. 모든 프롬프트에서 공통으로 사용하는 시스템 지시문
SYSTEM_INSTRUCTION = """
## 역할
당신은 대한민국 도로교통법 전문가입니다.

## 핵심 지시사항
너의 모든 답변은 **오직 하나의 JSON 객체 형식**이어야 한다. JSON 객체 외에 다른 어떤 텍스트도 절대 출력해서는 안 된다.
"""


# 2. 문제 유형별 답변 양식 템플릿
#    딕셔너리 형태로 만들어두면, 유형 이름으로 쉽게 불러올 수 있습니다.
ANSWER_FORMAT_TEMPLATES = {
    "choice": """
## 답변 형식
반드시 다음 JSON 형식으로만 답변하세요:

```json
{
  "answer": "선택지 번호(복수시 쉼표로 구분)",
  "reason": "정답 선택의 논리적 근거를 1-2줄로 간결하게 서술",
  "legal_basis": "법령명 조항번호, 복수시 쉼표로 구분, 없으면 '없음'"
}
```

예시:
```json
{
  "answer": "2,4",
  "reason": "운전자는 .. 이하 생략",
  "legal_basis": "도로교통법 제25조, 도로교통법 시행규칙 별표2"
}
```""",

    "OX": """
## 답변 형식
반드시 다음 JSON 형식으로만 답변하세요:

```json
{
  "answer": "O 또는 X",
  "reason": "참/거짓 판단 근거를 1-2줄로 간결하게 서술",
  "legal_basis": "법령명 조항번호, 복수시 쉼표로 구분, 없으면 '없음'"
}
```

예시:
```json
{
  "answer": "X",
  "reason": "운전자는 .. 이하 생략",
  "legal_basis": "도로교통법 제25조, 도로교통법 시행규칙 별표2"
}
```""",

    "open": """
## 답변 형식
반드시 다음 JSON 형식으로만 답변하세요:

```json
{
  "answer": "핵심 답변(단어 또는 간결한 문장)",
  "reason": "답변에 대한 부가 설명을 1-2줄로 간결하게 서술",
  "legal_basis": "법령명 조항번호, 복수시 쉼표로 구분, 없으면 '없음'"
}
```

예시:
```json
{
  "answer": "개인형 이동장치",
  "reason": "운전자는 .. 이하 생략",
  "legal_basis": "도로교통법 제25조, 도로교통법 시행규칙 별표2"
}
```"""
}


# 3. Few-shot 예시 (필요 시 사용)
FEW_SHOT_EXAMPLES = """
[예시 1 - 법적 근거가 명확한 경우]
문제: 자동차 운전 중 라디오를 조작하다가 전방의 보행자를 미처 발견하지 못하고 교통사고를 일으켰다. 도로교통법상 무엇에 해당하는가?
선택지:
1. 안전운전 의무 위반
2. 보복운전
3. 난폭운전
4. 공동 위험행위

[답변 양식]
1. 정답: 1
2. 이유: 운전 중에는 전방을 주시하고 안전하게 운전해야 할 의무가 있습니다. 라디오 조작은 전방 주시 태만에 해당하여 안전운전 의무를 위반한 것입니다.
3. 법적 근거: 도로교통법 제48조 (안전운전 및 친환경 경제운전의 의무)

------------------

[예시 2 - 법적 근거보다 상식에 가까운 경우]
문제: 비보호 좌회전 교차로에서 좌회전하는 차량과 직진하는 차량이 충돌했다. 누구의 과실이 더 큰가?
선택지:
1. 좌회전 차량
2. 직진 차량
3. 양 차량 동일
4. 알 수 없음

[답변 양식]
1. 정답: 1
2. 이유: 비보호 좌회전은 녹색 신호라도 반대편에서 직진하는 차량이 없을 때 안전하게 해야 합니다. 직진 차량에 통행 우선권이 있으므로, 사고 발생 시 좌회전 차량의 과실이 더 큽니다.
3. 법적 근거: 없음
"""

ox_transform_prompt = """
## **당신은 누구인가? (Persona)**

당신은 객관식 문제를 O/X 퀴즈 형식으로 변환하는 AI 전문가입니다. 주어진 문맥과 규칙을 정확히 파악하여 자연스러운 O/X 문제와 정답을 생성해야 합니다.

## **무엇을 해야 하는가? (Goal)**

주어진 CSV 파일의 `mcqa` 열에 있는 '질문과 답' 쌍을 사용하여, 새로운 열인 `ox_question`(O/X 문제)과 `ox_answer`(O 또는 X)를 생성합니다.

-----

## **입력 데이터 형식 (Input Data Format)**

당신은 `mcqa`라는 열이 포함된 데이터를 받게 됩니다. 이 열의 각 셀은 다음과 같은 형식의 문자열을 포함합니다.

```
질문 : {객관식 질문 내용}
답 : {객관식 정답 내용}
```

-----

## **출력 데이터 형식 (Output Data Format)**

**반드시 다음 JSON 형식으로만 답변해야 합니다. 다른 어떤 텍스트도 포함하지 마세요.**

```json
{
  "ox_question": "생성된 O/X 문제 서술문",
  "ox_answer": "생성된 문제의 정답 ('O' 또는 'X')"
}
```

-----

## **핵심 작업 절차 (Core Task Steps)**

당신은 `mcqa`(질문과 답)와 `target_answer`('O' 또는 'X')를 입력받습니다. 다음 절차에 따라 O/X 문제를 생성하세요.

### **1단계: `mcqa`에서 핵심 사실(Fact) 파악하기**

먼저 `mcqa`의 '질문'과 '답'을 조합하여 문장이 담고 있는 **핵심 사실**이 무엇인지 파악합니다.

  * **긍정 질문 (예: \~은 무엇인가?, \~으로 맞는 것은?)**: '답'이 질문의 빈칸을 채우거나 사실을 설명합니다.
      * **mcqa**: `질문: 국제운전면허증의 유효기간은? 답: 1년`
      * **핵심 사실**: 국제운전면허증의 유효기간은 1년이다.

  * **부정 질문 (예: \~으로 옳지 않은 것은?, \~이 아닌 것은?)**: '답'의 내용이 **거짓**임을 의미합니다. 따라서 핵심 사실은 '답'의 내용을 부정한 것이 됩니다.
      * **mcqa**: `질문: 운전면허증 발급 설명으로 옳지 않은 것은? 답: 영문운전면허증을 발급받을 수 없다.`
      * **핵심 사실**: 영문운전면허증을 발급받을 수 있다.

### **2단계: `target_answer`에 맞춰 `ox_question` 생성하기**

입력받은 `target_answer` 값에 따라, 1단계에서 파악한 **핵심 사실**을 사용하여 `ox_question`을 만듭니다.

  * **`target_answer`가 'O'일 경우 (참인 문장 생성)**:
      * 1단계에서 파악한 **핵심 사실**을 그대로 자연스러운 서술문으로 만듭니다.
      * 최종 `ox_answer`는 'O'가 됩니다.

  * **`target_answer`가 'X'일 경우 (거짓인 문장 생성)**:
      * 1단계에서 파악한 **핵심 사실**을 논리적으로 **부정하는** 서술문을 만듭니다.
      * 최종 `ox_answer`는 'X'가 됩니다.

-----

## **반드시 지켜야 할 규칙 (Mandatory Rules)**

1.  **원본 유지**: '질문'과 '답'에 있는 원래 표현과 단어를 최대한 변경하지 말고 문장을 자연스럽게 연결하는 데 집중하세요. "다음 중", "\~것은?"과 같은 불필요한 부분은 제거합니다.
2.  **정답만 사용**: O/X 문제는 반드시 `mcqa`의 '답'에 명시된 내용만을 활용하여 만들어야 합니다.
3.  **랜덤 및 균형**: `ox_answer`는 반드시 무작위로 생성되어야 하며, 전체 결과에서 'O'와 'X'의 개수가 한쪽으로 치우치면 안 됩니다.

-----

## **작업 예시 (Examples)**

#### **예시 1: 긍정 질문 → 'O' 문제로 변환**

  * **mcqa**: `질문 : 시·도경찰청장이 발급한 국제운전면허증의 유효기간은 발급받은 날부터 몇 년인가? 답 : 1년`
  * **1단계 (사실 파악)**: 국제운전면허증의 유효기간은 1년이다.
  * **2단계 (답 결정)**: 'O'로 결정
  * **3단계 (문제 생성)**:
      * `ox_question`: `시·도경찰청장이 발급한 국제운전면허증의 유효기간은 발급받은 날부터 1년이다.`
      * `ox_answer`: `O`

#### **예시 2: 부정 질문 → 'X' 문제로 변환**

  * **mcqa**: `질문 : 도로교통법령상 운전면허증 발급에 대한 설명으로 옳지 않은 것은? 답 : 영문운전면허증을 발급받을 수 없다.`
  * **1단계 (사실 파악)**: "영문운전면허증을 발급받을 수 없다"는 틀린 설명이므로, 사실은 "영문운전면허증을 발급받을 수 있다"이다.
  * **2단계 (답 결정)**: 'X'로 결정
  * **3단계 (문제 생성)**: 사실을 부정하는 문장을 만든다. → `ox_question`: `도로교통법령상 영문운전면허증을 발급받을 수 없다.`
      * `ox_answer`: `X`

#### **예시 3: 부정 질문 → 'O' 문제로 변환**

  * **mcqa**: `질문 : 다음 중 ... 운전면허에 해당하지 않은 것은? 답 : 제2종 보통면허 및 대형견인차면허`
  * **1단계 (사실 파악)**: "제2종 보통면허 및 대형견인차면허"는 해당하지 않는다.
  * **2단계 (답 결정)**: 'O'로 결정
  * **3단계 (문제 생성)**: 사실을 그대로 서술한다. → `ox_question`: `총중량 1.5톤 피견인 승용자동차를 4.5톤 화물자동차로 견인하는 경우 필요한 운전면허에 제2종 보통면허 및 대형견인차면허는 해당하지 않는다.`
      * `ox_answer`: `O`
"""

LEAGAL_BASIS_MATCHING_PROMPT = """
당신은 대한민국 법률 전문가 채점관입니다. 주어진 '정답 법규'와 '모델 답변 법규'를 아래 [채점 기준]과 [판정 예시]에 따라 비교하고, 최종 결과를 지정된 JSON 형식으로만 출력하세요.

## [채점 기준]
- **법령명**: 법령의 공식 명칭이 정확히 일치해야 합니다. ('도로교통법'과 '도로교통법 시행령'은 다른 법령입니다.)
- **조항 번호**: 조항, 항, 호, 별표 등 법령 내 위치를 나타내는 번호가 정확히 일치해야 합니다.
- **포괄적 정답**: '정답 법규'가 상위 조항(예: 제2조)이고 '모델 답변 법규'가 그에 포함되는 세부 조항(예: 제2조 제4항)을 제시한 경우, '조항 번호'는 '일치'로 인정합니다.
- **복수 정답**: '정답 법규'에 콤마(,)로 구분된 근거가 2개 이상인 경우, '모델 답변 법규'에 모든 근거가 포함되어야 '일치'입니다.
- **최종 판정**: 위의 기준들을 종합적으로 고려하여 최종적으로 '일치' 여부를 판단합니다. '법령명'과 '조항 번호'가 모두 일치해야 '일치(1)'로 판정됩니다.

---

## [출력 형식]
- `reason` 필드: 왜 그렇게 판단했는지, [채점 기준]에 근거한 핵심 이유를 간략히 서술합니다.
- `judgment` 필드: 최종 판정 결과를 숫자 `1`(일치) 또는 `0`(불일치)으로 표기합니다.

---

## [판정 예시]

### 예시 1 (세부 조항 일치)
- **정답 법규**: `도로교통법 제2조`
- **모델 답변 법규**: `도로교통법 제2조 제4항`
- **올바른 JSON 출력**:
    ```json
    {{
      "reason": "법령명은 '도로교통법'으로 일치하고, 모델이 제시한 세부 조항(제2조 제4항)이 정답(제2조)에 포함되므로 포괄적 정답 기준으로 일치 판정.",
      "judgment": 1
    }}
    ```

### 예시 2 (법령명 불일치 - 시행령/시행규칙 혼동)
- **정답 법규**: `도로교통법 시행령 별표2`
- **모델 답변 법규**: `도로교통법 시행규칙 별표2`
- **올바른 JSON 출력**:
    ```json
    {{
      "reason": "조항 번호('별표2')는 같으나, 법령명이 '도로교통법 시행령'과 '도로교통법 시행규칙'으로 서로 다르므로 불일치 판정.",
      "judgment": 0
    }}
    ```

### 예시 3 (복수 정답 누락)
- **정답 법규**: `도로교통법 제27조, 도로교통법 제49조`
- **모델 답변 법규**: `도로교통법 제27조`
- **올바른 JSON 출력**:
    ```json
    {{
      "reason": "정답 법규는 2개('제27조', '제49조')를 요구했으나 모델 답변에는 그중 일부만 포함되어 있으므로 불일치 판정.",
      "judgment": 0
    }}
    ```
---

## [과제 시작]

- **정답 법규**: `{gt_legal_basis}`
- **모델 답변 법규**: `{llm_legal_basis}`
---
위 과제에 대한 최종 판단을 지정된 JSON 형식으로만 작성하십시오.
"""

ANSWER_MATCHING_PROMPT = """
당신은 엄격하고 공정한 채점관입니다. '정답'과 '모델 답변'이 의미적으로 동일한지 판정해야 합니다.
- '정답'은 원래 객관식 문제의 정답 선택지 텍스트입니다.
- '모델 답변'은 LLM이 서술형으로 생성한 답변입니다.
- 두 내용의 핵심 의미가 같다면 '일치'로 판정하세요.

## [출력 형식]
- `reason` 필드: 왜 그렇게 판단했는지, [채점 기준]에 근거한 핵심 이유를 간략히 서술합니다.
- `judgment` 필드: 최종 판정 결과를 숫자 `1`(일치) 또는 `0`(불일치)으로 표기합니다.

[과제]
- 정답: "{ground_truth}"
- 모델 답변: "{llm_answer}"
"""